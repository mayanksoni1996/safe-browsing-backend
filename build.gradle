plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'tech.mayanksoni'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0")
    set('mapStructVersion', '1.6.3')
    set('googleGuavaVersion', "33.4.8-jre")
    set('minioVersion', '8.5.17')
    set('cucumberVersion', '7.15.0')
    set('apacheCommonsVersion', '1.18.0')
    set('springdocVersion', '2.4.0')
}

dependencies {
    implementation "io.minio:minio:${minioVersion}"
    implementation "com.google.guava:guava:${googleGuavaVersion}"
    implementation "commons-codec:commons-codec:${apacheCommonsVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:minio'
    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-spring:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumberVersion}"
    testImplementation 'org.junit.platform:junit-platform-suite'
    testImplementation 'org.junit.platform:junit-platform-console'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            mainClass = 'org.junit.platform.console.ConsoleLauncher'
            classpath = configurations.testRuntimeClasspath + sourceSets.main.output + sourceSets.test.output
            args = ['--select-class=tech.mayanksoni.safebrowsing.cucumber.CucumberTestRunner']
            systemProperty 'cucumber.publish.quiet', 'true'
        }
    }
}

tasks.named('jar') {
    enabled = false
}
